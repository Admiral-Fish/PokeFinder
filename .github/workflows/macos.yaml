name: CI - macOS

on:
  push:
    branches:
      - "master"
    tags:
      - "v[0-9]+\\.[0-9]+\\.[0-9]+"
  pull_request:

jobs:
  ci:
    name: Build
    runs-on: macos-13

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Restore Git Mtimes
        uses: ./.github/actions/git-mtime-cache

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: "6.8.3"
          archives: qtbase qtsvg qttools
          cache: true

      - name: Install python zstandard pip Package
        run: python3 -m pip install zstandard

      - name: Poll commit message
        id: commit_message
        run: |
          echo "{result}={$(git log -1 --pretty=format:"%s" 2>&1)}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Restore CMake build files
        if: ! contains(steps.commit_message.outputs.result, 'no-cache')
        id: cache
        uses: actions/cache/restore@v4
        env:
          cache-name: macos-cmake-build
        with:
          path: |
            ${{github.workspace}}/build
            ${{github.workspace}}/Source/Test/*.hpp
            ${{github.workspace}}/Source/Core/Resources/*.hpp
          key: ${{env.cache-name}}-${{hashFiles('**/CMakeLists.txt')}}-${{github.head_ref}}-${{github.run_id}}
          restore-keys: |
            ${{env.cache-name}}-${{hashFiles('**/CMakeLists.txt')}}-${{github.head_ref}}
            ${{env.cache-name}}-${{hashFiles('**/CMakeLists.txt')}}
            ${{env.cache-name}}-

      - name: Store File Mtimes
        uses: ./.github/actions/file-mtime-cache
        with:
          mode: save
          files: |
            ${{github.workspace}}/Source/Test/*.hpp
            ${{github.workspace}}/Source/Core/Resources/*.hpp

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_OSX_ARCHITECTURES="x86_64;arm64" -DTEST=ON

      - name: Restore Unmodified File Mtimes
        uses: ./.github/actions/file-mtime-cache
        with:
          mode: restore
          files: |
            ${{github.workspace}}/Source/Test/*.hpp
            ${{github.workspace}}/Source/Core/Resources/*.hpp

      - name: Build PokeFinder
        run: cmake --build ${{github.workspace}}/build --config RELEASE

      - name: Test PokeFinder
        run: ctest --test-dir ${{github.workspace}}/build -V

      - name: Save CMake build files
        uses: actions/cache/save@v4
        with:
          path: |
            ${{github.workspace}}/build
            ${{github.workspace}}/Source/Test/*.hpp
            ${{github.workspace}}/Source/Core/Resources/*.hpp
          key: ${{steps.cache.outputs.cache-primary-key}}

      - name: Package PokeFinder
        run: |
          mkdir upload
          mv build/Source/PokeFinder.app .
          macdeployqt PokeFinder.app -verbose=3
          tar czf PokeFinder-macOS.tar.gz PokeFinder.app
          mv PokeFinder-macOS.tar.gz upload

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: PokeFinder-macOS
          path: upload

      - name: Publish Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: PokeFinder-macOS.tar.gz
